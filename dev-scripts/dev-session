#!/bin/bash

# Universal Development Session Script
# Creates a 4-pane tmux layout for any Rails project or worktree
# Usage: ./dev-session [session-name] [directory]

# Configuration
DEFAULT_EDITOR="nvim"
DEFAULT_PORT="3000"

# Helper functions
get_current_dir() {
    pwd
}

get_project_name() {
    basename "$(get_current_dir)"
}

get_branch_name() {
    if git rev-parse --git-dir > /dev/null 2>&1; then
        git branch --show-current 2>/dev/null || echo "main"
    else
        echo "no-git"
    fi
}

generate_session_name() {
    local project_name=$(get_project_name)
    local branch_name=$(get_branch_name)
    
    # Create meaningful session name (replace slashes to avoid tmux parsing issues)
    if [[ "$branch_name" != "main" && "$branch_name" != "develop" && "$branch_name" != "no-git" ]]; then
        # Replace problematic characters for tmux session names
        safe_branch=$(echo "$branch_name" | sed 's/[\/:]/-/g')
        echo "${project_name}-${safe_branch}"
    else
        echo "$project_name"
    fi
}

is_rails_project() {
    [[ -f "Gemfile" && -f "config/application.rb" ]]
}

get_available_port() {
    # Start checking from default port
    local port=$DEFAULT_PORT
    while lsof -Pi :$port -sTCP:LISTEN -t >/dev/null 2>&1; do
        ((port++))
    done
    echo $port
}

# Parse arguments
SESSION_NAME="${1:-$(generate_session_name)}"
WORK_DIR="${2:-$(get_current_dir)}"

# Validate directory exists
if [[ ! -d "$WORK_DIR" ]]; then
    echo "Error: Directory $WORK_DIR does not exist"
    exit 1
fi

echo "Setting up development session: $SESSION_NAME"
echo "Working directory: $WORK_DIR"

# Check if session already exists
if tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
    echo "Session '$SESSION_NAME' already exists. Attaching..."
    tmux attach-session -t "$SESSION_NAME"
    exit 0
fi

# Create new session
echo "Creating new tmux session..."
tmux new-session -d -s "$SESSION_NAME" -c "$WORK_DIR"

# Create 4-pane layout: split horizontal then each pane vertical
echo "Setting up 4-pane layout..."
tmux split-window -h -c "$WORK_DIR"           # Now: 0|1
tmux split-window -v -c "$WORK_DIR"           # Now: 0|1
                                              #      0|2
tmux select-pane -t 0
tmux split-window -v -c "$WORK_DIR"           # Now: 0|1
                                              #      3|2

# Set up each pane
echo "Configuring panes..."

# Pane 0 (top-left): Editor
tmux send-keys -t 0 "$DEFAULT_EDITOR" C-m

# Pane 1 (top-right): Rails server
if is_rails_project; then
    echo "Starting Rails server..."
    tmux send-keys -t 1 "bin/dev" C-m
else
    echo "Not a Rails project, opening shell"
    tmux send-keys -t 1 "# Ready for commands" C-m
fi

# Pane 2 (bottom-right): Claude Code
echo "Starting Claude Code..."
tmux send-keys -t 2 "claude" C-m

# Pane 3 (bottom-left): Git status
if git rev-parse --git-dir > /dev/null 2>&1; then
    if command -v lazygit &> /dev/null; then
        tmux send-keys -t 3 "lazygit" C-m
    else
        tmux send-keys -t 3 "git status" C-m
    fi
else
    tmux send-keys -t 3 "# No git repository" C-m
fi

# Select the editor pane to start
tmux select-pane -t 0

# Set up window name
tmux rename-window "dev"

echo "✓ Development session ready!"
echo "Session: $SESSION_NAME"
if is_rails_project; then
    port=$(get_available_port)
    echo "Rails server: http://localhost:$port"
fi

echo ""
echo "Layout:"
echo "┌─────────────────┬─────────────────┐"
echo "│ nvim            │ rails server    │"
echo "├─────────────────┼─────────────────┤"
echo "│ git             │ claude          │"
echo "└─────────────────┴─────────────────┘"

# Attach to the session
tmux attach-session -t "$SESSION_NAME"